{"version":3,"sources":["Components/BankDetails/BankDetails.js","Components/Favorite/FavoriteIcon.js","Components/Banks/Banks.js","Components/SearchBar/SeachBar.js","Components/Cities/Cities.js","Components/BankDashboard/BankDashboard.js","App.js","serviceWorker.js","index.js"],"names":["BankDetails","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","bank","props","location","state","data","react_default","a","createElement","className","bank_id","bank_name","branch","city","district","Component","ls","require","FavoriteIcon","_getPrototypeOf2","_this","_len","length","args","Array","_key","call","concat","favoriteIcon","get","Bank_ifsc","_this2","onClick","e","setState","prevState","remove","set","Banks","colums","Header","accessor","Cell","Favorite_FavoriteIcon","original","ifsc","react_router_dom","to","pathname","es","minRows","defaultPageSize","columns","banks","loading","SeachBar","type","placeholder","onChange","search","target","searchKeywordChange","Cities","dist_default","options","filterCities","BankDashboard","filteredBanks","componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","stop","fetchData","_ref2","_callee2","cacheName","response","cache","_context2","fetch","sent","caches","open","abrupt","put","_x","getDataFromCache","_ref3","_callee3","_context3","match","_x2","saveData","_ref4","_callee4","_context4","json","_x3","_ref5","_callee5","_bank","_context5","_x4","filtered","filter","index","arr","_bank$bank_name","_bank$state","_bank$district","_bank$city","_bank$address","address","_bank$branch","_bank$bank_id","_bank$ifsc","toLowerCase","includes","parseInt","Components_Cities_Cities","SeachBar_SeachBar","Components_Banks_Banks","App","react_router","exact","path","component","Boolean","window","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bab0b080.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"../BankDetails/BankDetails.css\";\r\n\r\nexport class BankDetails extends Component {\r\n  render() {\r\n    const bank = this.props.location.state.data;\r\n    return (\r\n      <div className=\"details\">\r\n        <div className=\"item\">\r\n          <label>BankID </label>\r\n          <label>{bank.bank_id}</label>\r\n        </div>\r\n        <div className=\"item\">\r\n          <label>BankName </label>\r\n          <label>{bank.bank_name}</label>\r\n        </div>\r\n        <div className=\"item\">\r\n          <label>Branch </label>\r\n          <label>{bank.branch}</label>\r\n        </div>\r\n        <div className=\"item\">\r\n          <label>State </label>\r\n          <label>{bank.state}</label>\r\n        </div>\r\n        <div className=\"item\">\r\n          <label>City </label>\r\n          <label>{bank.city}</label>\r\n        </div>\r\n        <div className=\"item\">\r\n          <label>District </label>\r\n          <label>{bank.district}</label>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BankDetails;\r\n","import React, { Component } from \"react\";\r\nconst ls = require(\"local-storage\");\r\n\r\nexport class FavoriteIcon extends Component {\r\n  state = {\r\n    favoriteIcon: ls.get(this.props.Bank_ifsc)\r\n      ? \"star icon\"\r\n      : \"star outline icon\"\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <i\r\n          className={this.state.favoriteIcon}\r\n          onClick={e => {\r\n            this.setState(prevState => {\r\n              if (prevState.favoriteIcon === \"star icon\") {\r\n                ls.remove(this.props.Bank_ifsc, false);\r\n                return { favoriteIcon: \"star outline icon\" };\r\n              }\r\n              ls.set(this.props.Bank_ifsc, true);\r\n              return { favoriteIcon: \"star icon\" };\r\n            });\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FavoriteIcon;\r\n","import React, { Component } from \"react\";\r\nimport ReactTable from \"react-table\";\r\nimport \"react-table/react-table.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport FavoriteIcon from \"../Favorite/FavoriteIcon\";\r\n\r\nexport class Banks extends Component {\r\n  colums = [\r\n    {\r\n      Header: \"Favorite\",\r\n      accessor: \"favorite\",\r\n      Cell: props => {\r\n        return <FavoriteIcon Bank_ifsc={props.original.ifsc} />;\r\n      }\r\n    },\r\n    {\r\n      Header: \"IFSC\",\r\n      accessor: \"ifsc\"\r\n    },\r\n    {\r\n      Header: \"BankID\",\r\n      accessor: \"bank_id\"\r\n    },\r\n    {\r\n      Header: \"Branch\",\r\n      accessor: \"branch\"\r\n    },\r\n    {\r\n      Header: \"Address\",\r\n      accessor: \"address\"\r\n    },\r\n    {\r\n      Header: \"CITY\",\r\n      accessor: \"city\"\r\n    },\r\n    {\r\n      Header: \"District\",\r\n      accessor: \"district\"\r\n    },\r\n    {\r\n      Header: \"State\",\r\n      accessor: \"state\"\r\n    },\r\n    {\r\n      Header: \"BankName\",\r\n      accessor: \"bank_name\",\r\n      Cell: props => {\r\n        return (\r\n          <Link\r\n            to={{\r\n              pathname: `/BankDetails/${props.original.bank_name}`,\r\n              state: { data: props.original }\r\n            }}\r\n          >\r\n            {props.original.bank_name}\r\n          </Link>\r\n        );\r\n      }\r\n    }\r\n  ];\r\n\r\n  render() {\r\n    return (\r\n      <ReactTable\r\n        minRows={10}\r\n        defaultPageSize={10}\r\n        columns={this.colums}\r\n        data={this.props.banks}\r\n        loading={this.props.loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Banks;\r\n","import React, { Component } from \"react\";\r\nimport \"../SearchBar/SearchBar.css\";\r\n\r\nexport class SeachBar extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"input\"\r\n          placeholder=\"Search Here..\"\r\n          onChange={e => {\r\n            const search = e.target.value;\r\n            this.props.searchKeywordChange(search);\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Dropdown from \"react-dropdown\";\r\nimport \"react-dropdown/style.css\";\r\nimport \"../Cities/Cities.css\";\r\n\r\nexport class Cities extends Component {\r\n  state = {\r\n    value: \"MUMBAI\"\r\n  };\r\n  render() {\r\n    const cities = [\r\n      \"MUMBAI\",\r\n      \"BANGLORE\",\r\n      \"HYDERABAD\",\r\n      \"CHENNAI\",\r\n      \"GREATER MUMBAI\"\r\n    ];\r\n    return (\r\n      <div className=\"dropdown\">\r\n        <Dropdown\r\n          value={this.state.value}\r\n          options={cities}\r\n          onChange={e => {\r\n            this.setState({ value: e.value });\r\n            this.props.filterCities(e.value);\r\n          }}\r\n          placeholder=\"Select City\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cities;\r\n","import React, { Component } from \"react\";\r\nimport Banks from \"../Banks/Banks\";\r\nimport { SeachBar } from \"../SearchBar/SeachBar\";\r\nimport Cities from \"../Cities/Cities\";\r\nimport \"../BankDashboard/BankDashboard.css\";\r\n\r\nexport class BankDashboard extends Component {\r\n  state = {\r\n    banks: [],\r\n    filteredBanks: [],\r\n    loading: false\r\n  };\r\n  componentDidMount = async () => {\r\n    await this.filterCities(\"MUMBAI\");\r\n  };\r\n\r\n  fetchData = async value => {\r\n    const cacheName = \"my-website-cache\";\r\n    const response = await fetch(\r\n      `https://vast-shore-74260.herokuapp.com/banks?city=${value}`\r\n    );\r\n    const data = await response;\r\n    const cache = await caches.open(cacheName);\r\n    return cache.put(value, data);\r\n  };\r\n\r\n  getDataFromCache = async value => {\r\n    this.setState({ loading: true });\r\n    const cacheName = \"my-website-cache\";\r\n    const cache = await caches.open(cacheName);\r\n    return await cache.match(value);\r\n  };\r\n\r\n  saveData = async banks => {\r\n    const data = await banks.json();\r\n\r\n    this.setState({\r\n      filteredBanks: data,\r\n      loading: false,\r\n      banks: data\r\n    });\r\n  };\r\n\r\n  filterCities = async value => {\r\n    this.setState({ loading: true, filteredBanks: [] });\r\n    const bank = await this.getDataFromCache(value);\r\n\r\n    if (bank) {\r\n      await this.saveData(bank);\r\n      await this.fetchData(value);\r\n    } else {\r\n      await this.fetchData(value);\r\n      const bank = await this.getDataFromCache(value);\r\n      await this.saveData(bank);\r\n    }\r\n  };\r\n\r\n  searchKeywordChange = search => {\r\n    const filtered = this.state.banks.filter(function(bank, index, arr) {\r\n      let {\r\n        bank_name = \"\",\r\n        state = \"\",\r\n        district = \"\",\r\n        city = \"\",\r\n        address = \"\",\r\n        branch = \"\",\r\n        bank_id = \"\",\r\n        ifsc = \"\"\r\n      } = bank;\r\n\r\n      return (\r\n        bank_name.toLowerCase().includes(search.toLowerCase()) ||\r\n        state.toLowerCase().includes(search.toLowerCase()) ||\r\n        district.toLowerCase().includes(search.toLowerCase()) ||\r\n        city.toLowerCase().includes(search.toLowerCase()) ||\r\n        address.toLowerCase().includes(search.toLowerCase()) ||\r\n        branch.toLowerCase().includes(search.toLowerCase()) ||\r\n        ifsc.toLowerCase().includes(search.toLowerCase()) ||\r\n        bank_id === parseInt(search)\r\n      );\r\n    });\r\n    this.setState({ filteredBanks: filtered });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"filter\">\r\n          <Cities filterCities={this.filterCities} />\r\n          <SeachBar searchKeywordChange={this.searchKeywordChange} />\r\n        </div>\r\n        <Banks banks={this.state.filteredBanks} loading={this.state.loading} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BankDashboard;\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport BankDetails from \"./Components/BankDetails/BankDetails\";\nimport BankDashboard from \"./Components/BankDashboard/BankDashboard\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <BrowserRouter>\n          <Switch>\n            <Route exact path=\"/\" component={BankDashboard} />\n            <Route exact path=\"/BankDetails/:id\" component={BankDetails} />\n          </Switch>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}